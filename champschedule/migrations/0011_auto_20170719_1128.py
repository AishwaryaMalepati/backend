# -*- coding: utf-8 -*-
# Generated by Django 1.10.6 on 2017-07-19 16:28
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('champschedule', '0010_auto_20170719_1045'),
    ]

    operations = [
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=80, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='champschedule.AuthGroup')),
                ('permission', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='champschedule.AuthPermission')),
            ],
            options={
                'db_table': 'auth_group_permissions',
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='champschedule.AuthGroup')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='champschedule.AuthUser')),
            ],
            options={
                'db_table': 'auth_user_groups',
            },
        ),
        migrations.CreateModel(
            name='WmsDriver',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(blank=True, max_length=100, null=True)),
                ('last_name', models.CharField(blank=True, max_length=50, null=True)),
                ('dob', models.CharField(blank=True, max_length=20, null=True)),
                ('license_number', models.CharField(blank=True, max_length=100, null=True)),
                ('license_state', models.CharField(blank=True, max_length=2, null=True)),
                ('license_expiration', models.DateField(blank=True, null=True)),
                ('medical_certificate_expiration', models.DateField(blank=True, null=True)),
                ('last_mvr', models.DateField(blank=True, null=True)),
                ('employment_status', models.CharField(blank=True, max_length=20, null=True)),
                ('license_image', models.CharField(blank=True, max_length=100, null=True)),
                ('compressed_license_image', models.CharField(blank=True, max_length=100, null=True)),
                ('driver_group', models.CharField(blank=True, max_length=50, null=True)),
                ('sub_group', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'wms_driver',
            },
        ),
        migrations.AlterUniqueTogether(
            name='admintoolsdashboardpreferences',
            unique_together=set([]),
        ),
        migrations.RemoveField(
            model_name='admintoolsdashboardpreferences',
            name='user',
        ),
        migrations.RemoveField(
            model_name='admintoolsmenubookmark',
            name='user',
        ),
        migrations.RemoveField(
            model_name='schedulecalendarrelation',
            name='calendar',
        ),
        migrations.RemoveField(
            model_name='schedulecalendarrelation',
            name='content_type',
        ),
        migrations.RemoveField(
            model_name='scheduleevent',
            name='calendar',
        ),
        migrations.RemoveField(
            model_name='scheduleevent',
            name='creator',
        ),
        migrations.RemoveField(
            model_name='scheduleevent',
            name='rule',
        ),
        migrations.RemoveField(
            model_name='scheduleeventrelation',
            name='content_type',
        ),
        migrations.RemoveField(
            model_name='scheduleeventrelation',
            name='event',
        ),
        migrations.RemoveField(
            model_name='scheduleoccurrence',
            name='event',
        ),
        migrations.AlterModelOptions(
            name='event',
            options={'ordering': ['start']},
        ),
        migrations.RemoveField(
            model_name='event',
            name='driver_id',
        ),
        migrations.AddField(
            model_name='event',
            name='driver',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='events', to='champschedule.Driver'),
        ),
        migrations.AlterField(
            model_name='driver',
            name='id',
            field=models.IntegerField(primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name='event',
            name='id',
            field=models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),
        ),
        migrations.DeleteModel(
            name='AdminToolsDashboardPreferences',
        ),
        migrations.DeleteModel(
            name='AdminToolsMenuBookmark',
        ),
        migrations.DeleteModel(
            name='ScheduleCalendar',
        ),
        migrations.DeleteModel(
            name='ScheduleCalendarrelation',
        ),
        migrations.DeleteModel(
            name='ScheduleEvent',
        ),
        migrations.DeleteModel(
            name='ScheduleEventrelation',
        ),
        migrations.DeleteModel(
            name='ScheduleOccurrence',
        ),
        migrations.DeleteModel(
            name='ScheduleRule',
        ),
        migrations.AlterUniqueTogether(
            name='authusergroups',
            unique_together=set([('user', 'group')]),
        ),
        migrations.AlterUniqueTogether(
            name='authgrouppermissions',
            unique_together=set([('group', 'permission')]),
        ),
    ]
