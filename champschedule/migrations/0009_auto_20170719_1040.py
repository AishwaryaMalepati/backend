# -*- coding: utf-8 -*-
# Generated by Django 1.10.6 on 2017-07-19 15:40
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('champschedule', '0008_auto_20170524_1012'),
    ]

    operations = [
        migrations.CreateModel(
            name='AdminToolsDashboardPreferences',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.TextField()),
                ('dashboard_id', models.CharField(max_length=100)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='champschedule.AuthUser')),
            ],
            options={
                'db_table': 'admin_tools_dashboard_preferences',
            },
        ),
        migrations.CreateModel(
            name='AdminToolsMenuBookmark',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.CharField(max_length=255)),
                ('title', models.CharField(max_length=255)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='champschedule.AuthUser')),
            ],
            options={
                'db_table': 'admin_tools_menu_bookmark',
            },
        ),
        migrations.CreateModel(
            name='CsEmployee',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('first_name', models.CharField(blank=True, max_length=100, null=True)),
                ('last_name', models.CharField(blank=True, max_length=50, null=True)),
                ('dob', models.CharField(blank=True, max_length=20, null=True)),
                ('license_number', models.CharField(blank=True, max_length=100, null=True)),
                ('license_state', models.CharField(blank=True, max_length=2, null=True)),
                ('license_expiration', models.DateField(blank=True, null=True)),
                ('medical_certificate_expiration', models.DateField(blank=True, null=True)),
                ('last_mvr', models.DateField(blank=True, null=True)),
                ('employment_status', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'cs_employee',
            },
        ),
        migrations.CreateModel(
            name='CsEntityEvents',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('employee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='champschedule.CsEmployee')),
            ],
            options={
                'db_table': 'cs_entity_events',
            },
        ),
        migrations.CreateModel(
            name='CsEntitytype',
            fields=[
                ('type_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=25, null=True)),
            ],
            options={
                'db_table': 'cs_entitytype',
            },
        ),
        migrations.CreateModel(
            name='CsEquipment',
            fields=[
                ('equipment_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=30, null=True)),
                ('entitytype', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='champschedule.CsEntitytype')),
            ],
            options={
                'db_table': 'cs_equipment',
            },
        ),
        migrations.CreateModel(
            name='CsEvent',
            fields=[
                ('event_id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('event_start', models.DateTimeField(blank=True, null=True)),
                ('event_end', models.DateTimeField(blank=True, null=True)),
                ('all_day', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'cs_event',
            },
        ),
        migrations.CreateModel(
            name='CsGroup',
            fields=[
                ('group_id', models.AutoField(primary_key=True, serialize=False)),
                ('group_name', models.CharField(blank=True, max_length=30, null=True)),
            ],
            options={
                'db_table': 'cs_group',
            },
        ),
        migrations.CreateModel(
            name='CsHotel',
            fields=[
                ('hotel_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=30, null=True)),
                ('entitytype', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='champschedule.CsEntitytype')),
            ],
            options={
                'db_table': 'cs_hotel',
            },
        ),
        migrations.CreateModel(
            name='CsLocation',
            fields=[
                ('loc_id', models.AutoField(primary_key=True, serialize=False)),
                ('loc_name', models.CharField(blank=True, max_length=25, null=True)),
            ],
            options={
                'db_table': 'cs_location',
            },
        ),
        migrations.CreateModel(
            name='CsRentalcar',
            fields=[
                ('car_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=25, null=True)),
                ('entitytype', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='champschedule.CsEntitytype')),
            ],
            options={
                'db_table': 'cs_rentalcar',
            },
        ),
        migrations.CreateModel(
            name='CsSubgroup',
            fields=[
                ('subgroup_id', models.AutoField(primary_key=True, serialize=False)),
                ('subgroup_name', models.CharField(blank=True, max_length=20, null=True)),
                ('group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='champschedule.CsGroup')),
            ],
            options={
                'db_table': 'cs_subgroup',
            },
        ),
        migrations.CreateModel(
            name='ScheduleCalendar',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('slug', models.CharField(max_length=200)),
            ],
            options={
                'db_table': 'schedule_calendar',
            },
        ),
        migrations.CreateModel(
            name='ScheduleCalendarrelation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.IntegerField()),
                ('distinction', models.CharField(blank=True, max_length=20, null=True)),
                ('inheritable', models.BooleanField()),
                ('calendar', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='champschedule.ScheduleCalendar')),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='champschedule.DjangoContentType')),
            ],
            options={
                'db_table': 'schedule_calendarrelation',
            },
        ),
        migrations.CreateModel(
            name='ScheduleEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start', models.DateTimeField()),
                ('end', models.DateTimeField()),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_on', models.DateTimeField()),
                ('updated_on', models.DateTimeField()),
                ('end_recurring_period', models.DateTimeField(blank=True, null=True)),
                ('color_event', models.CharField(blank=True, max_length=10, null=True)),
                ('calendar', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='champschedule.ScheduleCalendar')),
                ('creator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='champschedule.AuthUser')),
            ],
            options={
                'db_table': 'schedule_event',
            },
        ),
        migrations.CreateModel(
            name='ScheduleEventrelation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.IntegerField()),
                ('distinction', models.CharField(blank=True, max_length=20, null=True)),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='champschedule.DjangoContentType')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='champschedule.ScheduleEvent')),
            ],
            options={
                'db_table': 'schedule_eventrelation',
            },
        ),
        migrations.CreateModel(
            name='ScheduleOccurrence',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('start', models.DateTimeField()),
                ('end', models.DateTimeField()),
                ('cancelled', models.BooleanField()),
                ('original_start', models.DateTimeField()),
                ('original_end', models.DateTimeField()),
                ('created_on', models.DateTimeField()),
                ('updated_on', models.DateTimeField()),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='champschedule.ScheduleEvent')),
            ],
            options={
                'db_table': 'schedule_occurrence',
            },
        ),
        migrations.CreateModel(
            name='ScheduleRule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32)),
                ('description', models.TextField()),
                ('frequency', models.CharField(max_length=10)),
                ('params', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'schedule_rule',
            },
        ),
        migrations.DeleteModel(
            name='WmsDriver',
        ),
        migrations.AlterModelOptions(
            name='event',
            options={},
        ),
        migrations.RemoveField(
            model_name='event',
            name='driver',
        ),
        migrations.AddField(
            model_name='event',
            name='driver_id',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='driver',
            name='id',
            field=models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),
        ),
        migrations.AlterField(
            model_name='event',
            name='id',
            field=models.IntegerField(blank=True, primary_key=True, serialize=False),
        ),
        migrations.AddField(
            model_name='scheduleevent',
            name='rule',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='champschedule.ScheduleRule'),
        ),
        migrations.AddField(
            model_name='csevent',
            name='loc',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='champschedule.CsLocation'),
        ),
        migrations.AddField(
            model_name='csentityevents',
            name='equipment',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='champschedule.CsEquipment'),
        ),
        migrations.AddField(
            model_name='csentityevents',
            name='event',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='champschedule.CsEvent'),
        ),
        migrations.AddField(
            model_name='csentityevents',
            name='hotel',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='champschedule.CsHotel'),
        ),
        migrations.AddField(
            model_name='csentityevents',
            name='rentalcar',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='champschedule.CsRentalcar'),
        ),
        migrations.AddField(
            model_name='csemployee',
            name='entitytype',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='champschedule.CsEntitytype'),
        ),
        migrations.AddField(
            model_name='csemployee',
            name='group',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='champschedule.CsGroup'),
        ),
        migrations.AddField(
            model_name='csemployee',
            name='subgroup',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='champschedule.CsSubgroup'),
        ),
        migrations.AlterUniqueTogether(
            name='admintoolsdashboardpreferences',
            unique_together=set([('user', 'dashboard_id')]),
        ),
    ]
